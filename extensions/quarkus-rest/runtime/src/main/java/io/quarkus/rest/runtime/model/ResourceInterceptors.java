package io.quarkus.rest.runtime.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ResourceInterceptors {

    private final List<ResourceRequestInterceptor> resourcePreMatchRequestInterceptors = new ArrayList<>();
    private final List<ResourceRequestInterceptor> resourceRequestInterceptors = new ArrayList<>();
    private final List<ResourceResponseInterceptor> resourceResponseInterceptors = new ArrayList<>();

    public List<ResourceRequestInterceptor> getRequestInterceptors() {
        return resourceRequestInterceptors;
    }

    public List<ResourceResponseInterceptor> getResponseInterceptors() {
        return resourceResponseInterceptors;
    }

    public List<ResourceRequestInterceptor> getResourcePreMatchRequestInterceptors() {
        return resourcePreMatchRequestInterceptors;
    }

    public void addRequestInterceptor(ResourceRequestInterceptor interceptor) {
        this.resourceRequestInterceptors.add(interceptor);
    }

    public void addResponseInterceptor(ResourceResponseInterceptor interceptor) {
        this.resourceResponseInterceptors.add(interceptor);
    }

    public void addResourcePreMatchInterceptor(ResourceRequestInterceptor interceptor) {
        resourcePreMatchRequestInterceptors.add(interceptor);
    }

    // we sort this at build time as the order of the elements in the lists is retained in generated bytecode
    // therefore at runtime the elements are already properly sorted
    public ResourceInterceptors sort() {
        Collections.sort(resourcePreMatchRequestInterceptors);
        Collections.sort(resourceRequestInterceptors);
        Collections.sort(resourceResponseInterceptors);
        return this;
    }

}
