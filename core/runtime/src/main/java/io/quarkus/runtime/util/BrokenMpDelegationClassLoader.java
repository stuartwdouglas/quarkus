package io.quarkus.runtime.util;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.Enumeration;

/**
 * This can be deleted when we have MP config 1.4
 *
 * 1.3 does a broken thing where it looks up every parent class loader
 * when trying to load config, which just breaks everything if you have
 * isolated class loaders.
 *
 * This is used form generated bytecode, and has some static methods to make
 * it easy to use. It is a big hack and should be deleted ASAP
 */
@Deprecated
public class BrokenMpDelegationClassLoader extends ClassLoader {

    private static ClassLoader old;

    public static void setupBrokenClWorkaround() {
        old = Thread.currentThread().getContextClassLoader();
        Thread.currentThread().setContextClassLoader(new BrokenMpDelegationClassLoader(old));
    }

    public static void teardownBrokenClWorkaround() {
        Thread.currentThread().setContextClassLoader(old);
    }

    private final ClassLoader delegate;

    public BrokenMpDelegationClassLoader(ClassLoader delegate) {
        super(null);
        this.delegate = delegate;
    }

    @Override
    public Class<?> loadClass(String name) throws ClassNotFoundException {
        return delegate.loadClass(name);
    }

    @Override
    protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {
        return delegate.loadClass(name);
    }

    @Override
    public URL getResource(String name) {
        return delegate.getResource(name);
    }

    @Override
    public Enumeration<URL> getResources(String name) throws IOException {
        return delegate.getResources(name);
    }

    @Override
    public InputStream getResourceAsStream(String name) {
        return delegate.getResourceAsStream(name);
    }

}
